SPEC
--------
PRODUCER
--------
producer produces log events, each represented by an integer of increasing value.
it publishes these to the svs group "/svs/mnemosyne/log_events"

------------
RECORD_STORE
------------
Provides storage functionality to the consumer class to store and retrieve records. Each consumer has its own RecordStore object. Implemented using a simple dict, but in the final version this will use some sort of persistent storage. Gives the following functionality:

store_record(new_record):
stores the record in persistent storage, in both the record and tails section. called when a new record is created -- either by the logger the store belongs to or receiving an ADD-REC update from another logger.

pop_tail_record(tail_record_name):
deletes the tail record of name "tail_record_name" from the tail section of persistent storage. returns said tail record. called upon receiving a DEL-TAIL update from another logger, or upon adding a new node that uses the node with name "tail_record_name" as its prior node link.

------------
CONSUMER
------------

update_records(record_changes):
takes in a list of record changes and makes appropriate changes to the storage. the changes are in a list format. called upon receiving an SVS record group update from another logger.